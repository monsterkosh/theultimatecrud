{
  "openapi": "3.0.1",
  "info": {
    "title": "The Ultimate Crud",
    "description": "A well designed create, read, update and delete API with register, authentication, authorization and more.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "/",
      "description": "Description about the API"
    },
    {
      "name": "/users",
      "description": "Endpoint for handling basic C.R.U.D requests"
    },
    {
      "name": "/auth",
      "description": "Endpoint for handling user authentication and registering"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Returns info about the API",
        "responses": {
          "200": {
            "description": "OK success status"
          }
        },
        "tags": [
          "/"
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "Returns an array of object with all the users",
        "responses": {
          "200": {
            "description": "OK success status"
          }
        },
        "tags": [
          "/users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Returns a object with info about the specific user",
        "responses": {
          "200": {
            "description": "OK success status"
          }
        },
        "tags": [
          "/users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ]
      },
      "patch": {
        "summary": "Updates the name of a user",
        "responses": {
          "200": {
            "description": "OK success status"
          }
        },
        "tags": [
          "/users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization token (obtained after login)",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "cookie",
            "name": "user",
            "description": "The user to update",
            "schema": {
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Deletes an user",
        "responses": {
          "200": {
            "description": "OK success status"
          }
        },
        "tags": [
          "/users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization token (obtained after login)",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Registers a new user",
        "responses": {
          "200": {
            "description": "OK success status"
          }
        },
        "tags": [
          "/auth"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "register",
            "description": "The user to create",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Logs-in the specified user",
        "responses": {
          "200": {
            "description": "OK success status"
          }
        },
        "tags": [
          "/auth"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "login",
            "description": "User login - Returns a token",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ]
      }
    }
  }
}